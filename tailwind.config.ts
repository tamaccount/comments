import type { Config } from 'tailwindcss';

const config: Config = {
  content: [
    './src/pages/**/*.{js,ts,jsx,tsx,mdx}',
    './src/components/**/*.{js,ts,jsx,tsx,mdx}',
    './src/app/**/*.{js,ts,jsx,tsx,mdx}',
  ],
  darkMode: 'class',
  theme: {
    extend: {
      backgroundImage: {
        'gradient-radial': 'radial-gradient(var(--tw-gradient-stops))',
        'gradient-conic': 'conic-gradient(from 180deg at 50% 50%, var(--tw-gradient-stops))',
      },
      fontFamily: {
        sans: ['var(--font-geist-sans)'],
        mono: ['var(--font-geist-mono)'],
      },
      keyframes: {
        float: {
          '0%, 100%': { transform: 'translate(0, 0)' },
          '50%': { transform: 'translate(0, -4px)' },
        },
      },
      animation: {
        float: 'float 3s ease-in-out infinite',
      },
    },
    colors: {
      gray: {
        100: 'hsla(var(--ds-gray-100-value), <alpha-value>)',
        200: 'hsla(var(--ds-gray-200-value), <alpha-value>)',
        300: 'hsla(var(--ds-gray-300-value), <alpha-value>)',
        400: 'hsla(var(--ds-gray-400-value), <alpha-value>)',
        500: 'hsla(var(--ds-gray-500-value), <alpha-value>)',
        600: 'hsla(var(--ds-gray-600-value), <alpha-value>)',
        700: 'hsla(var(--ds-gray-700-value), <alpha-value>)',
        800: 'hsla(var(--ds-gray-800-value), <alpha-value>)',
        900: 'hsla(var(--ds-gray-900-value), <alpha-value>)',
        1000: 'hsla(var(--ds-gray-1000-value), <alpha-value>)',
        'alpha-100': 'var(--ds-gray-alpha-100)',
        'alpha-200': 'var(--ds-gray-alpha-200)',
        'alpha-300': 'var(--ds-gray-alpha-300)',
        'alpha-400': 'var(--ds-gray-alpha-400)',
        'alpha-500': 'var(--ds-gray-alpha-500)',
        'alpha-600': 'var(--ds-gray-alpha-600)',
        'alpha-700': 'var(--ds-gray-alpha-700)',
        'alpha-800': 'var(--ds-gray-alpha-800)',
        'alpha-900': 'var(--ds-gray-alpha-900)',
        'alpha-1000': 'var(--ds-gray-alpha-1000)',
      },
      blue: {
        100: 'hsla(var(--ds-blue-100-value), <alpha-value>)',
        200: 'hsla(var(--ds-blue-200-value), <alpha-value>)',
        300: 'hsla(var(--ds-blue-300-value), <alpha-value>)',
        400: 'hsla(var(--ds-blue-400-value), <alpha-value>)',
        500: 'hsla(var(--ds-blue-500-value), <alpha-value>)',
        600: 'hsla(var(--ds-blue-600-value), <alpha-value>)',
        700: 'hsla(var(--ds-blue-700-value), <alpha-value>)',
        800: 'hsla(var(--ds-blue-800-value), <alpha-value>)',
        900: 'hsla(var(--ds-blue-900-value), <alpha-value>)',
        1000: 'hsla(var(--ds-blue-1000-value), <alpha-value>)',
      },
      red: {
        100: 'hsla(var(--ds-red-100-value), <alpha-value>)',
        200: 'hsla(var(--ds-red-200-value), <alpha-value>)',
        300: 'hsla(var(--ds-red-300-value), <alpha-value>)',
        400: 'hsla(var(--ds-red-400-value), <alpha-value>)',
        500: 'hsla(var(--ds-red-500-value), <alpha-value>)',
        600: 'hsla(var(--ds-red-600-value), <alpha-value>)',
        700: 'hsla(var(--ds-red-700-value), <alpha-value>)',
        800: 'hsla(var(--ds-red-800-value), <alpha-value>)',
        900: 'hsla(var(--ds-red-900-value), <alpha-value>)',
        1000: 'hsla(var(--ds-red-1000-value), <alpha-value>)',
      },
      amber: {
        100: 'hsla(var(--ds-amber-100-value), <alpha-value>)',
        200: 'hsla(var(--ds-amber-200-value), <alpha-value>)',
        300: 'hsla(var(--ds-amber-300-value), <alpha-value>)',
        400: 'hsla(var(--ds-amber-400-value), <alpha-value>)',
        500: 'hsla(var(--ds-amber-500-value), <alpha-value>)',
        600: 'hsla(var(--ds-amber-600-value), <alpha-value>)',
        700: 'hsla(var(--ds-amber-700-value), <alpha-value>)',
        800: 'hsla(var(--ds-amber-800-value), <alpha-value>)',
        900: 'hsla(var(--ds-amber-900-value), <alpha-value>)',
        1000: 'hsla(var(--ds-amber-1000-value), <alpha-value>)',
      },
      green: {
        100: 'hsla(var(--ds-green-100-value), <alpha-value>)',
        200: 'hsla(var(--ds-green-200-value), <alpha-value>)',
        300: 'hsla(var(--ds-green-300-value), <alpha-value>)',
        400: 'hsla(var(--ds-green-400-value), <alpha-value>)',
        500: 'hsla(var(--ds-green-500-value), <alpha-value>)',
        600: 'hsla(var(--ds-green-600-value), <alpha-value>)',
        700: 'hsla(var(--ds-green-700-value), <alpha-value>)',
        800: 'hsla(var(--ds-green-800-value), <alpha-value>)',
        900: 'hsla(var(--ds-green-900-value), <alpha-value>)',
        1000: 'hsla(var(--ds-green-1000-value), <alpha-value>)',
      },
      teal: {
        100: 'hsla(var(--ds-teal-100-value), <alpha-value>)',
        200: 'hsla(var(--ds-teal-200-value), <alpha-value>)',
        300: 'hsla(var(--ds-teal-300-value), <alpha-value>)',
        400: 'hsla(var(--ds-teal-400-value), <alpha-value>)',
        500: 'hsla(var(--ds-teal-500-value), <alpha-value>)',
        600: 'hsla(var(--ds-teal-600-value), <alpha-value>)',
        700: 'hsla(var(--ds-teal-700-value), <alpha-value>)',
        800: 'hsla(var(--ds-teal-800-value), <alpha-value>)',
        900: 'hsla(var(--ds-teal-900-value), <alpha-value>)',
        1000: 'hsla(var(--ds-teal-1000-value), <alpha-value>)',
      },
      purple: {
        100: 'hsla(var(--ds-purple-100-value), <alpha-value>)',
        200: 'hsla(var(--ds-purple-200-value), <alpha-value>)',
        300: 'hsla(var(--ds-purple-300-value), <alpha-value>)',
        400: 'hsla(var(--ds-purple-400-value), <alpha-value>)',
        500: 'hsla(var(--ds-purple-500-value), <alpha-value>)',
        600: 'hsla(var(--ds-purple-600-value), <alpha-value>)',
        700: 'hsla(var(--ds-purple-700-value), <alpha-value>)',
        800: 'hsla(var(--ds-purple-800-value), <alpha-value>)',
        900: 'hsla(var(--ds-purple-900-value), <alpha-value>)',
        1000: 'hsla(var(--ds-purple-1000-value), <alpha-value>)',
      },
      pink: {
        100: 'hsla(var(--ds-pink-100-value), <alpha-value>)',
        200: 'hsla(var(--ds-pink-200-value), <alpha-value>)',
        300: 'hsla(var(--ds-pink-300-value), <alpha-value>)',
        400: 'hsla(var(--ds-pink-400-value), <alpha-value>)',
        500: 'hsla(var(--ds-pink-500-value), <alpha-value>)',
        600: 'hsla(var(--ds-pink-600-value), <alpha-value>)',
        700: 'hsla(var(--ds-pink-700-value), <alpha-value>)',
        800: 'hsla(var(--ds-pink-800-value), <alpha-value>)',
        900: 'hsla(var(--ds-pink-900-value), <alpha-value>)',
        1000: 'hsla(var(--ds-pink-1000-value), <alpha-value>)',
      },
      background: {
        100: 'var(--ds-background-100)',
        200: 'var(--ds-background-200)',
      },
      foreground: 'hsla(var(--ds-gray-1000-value), <alpha-value>)',
      black: 'hsla(var(--ds-gray-1000-value), <alpha-value>)',
      white: 'var(--ds-background-100)',
      inherit: 'inherit',
      current: 'currentColor',
      transparent: 'transparent',
    },
    borderRadius: {
      min: 'var(--corner-min)',
      tn: 'var(--corner-tiny)',
      sm: 'var(--corner-small)',
      md: 'var(--corner-medium)',
      lg: 'var(--corner-large)',
      full: 'var(--corner-full)',
    },
    boxShadow: {
      none: 'none',
      'border-inset': 'var(--ds-shadow-border-inset)',
      DEFAULT: 'var(--ds-shadow-border-medium)',
      border: 'var(--ds-shadow-border)',
      base: 'var(--ds-shadow-base)',
      'surface-sm': 'var(--ds-shadow-surface-small)',
      sm: 'var(--ds-shadow-border-small)',
      md: 'var(--ds-shadow-border-medium)',
      lg: 'var(--ds-shadow-border-large)',
      tooltip: 'var(--ds-shadow-tooltip)',
      cursor: 'var(--ds-shadow-cursor)',
      menu: 'var(--ds-shadow-menu)',
      modal: 'var(--ds-shadow-modal)',
      fullscreen: 'var(--ds-shadow-fullscreen)',
      'focus-ring': 'var(--ds-focus-ring)',
      'focus-border': 'var(--ds-focus-border)',
    },
    container: {
      center: true,
      padding: '24px',
      screens: {
        lg: `calc(1200px + 48px)`,
      },
    },
    screens: {
      md: '601px', // +1px, as this is min-width an needs to align with Stack's 600px max-width
      lg: '961px',
      xl: '1200px',
      '2xl': '1400px',
    },
  },
  plugins: [],
};
export default config;
